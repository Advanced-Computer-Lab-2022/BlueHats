"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Radio = require("@material-ui/core/Radio");

var _Radio2 = _interopRequireDefault(_Radio);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RadioIcon = function (_React$Component) {
  _inherits(RadioIcon, _React$Component);

  function RadioIcon() {
    _classCallCheck(this, RadioIcon);

    return _possibleConstructorReturn(this, (RadioIcon.__proto__ || Object.getPrototypeOf(RadioIcon)).apply(this, arguments));
  }

  _createClass(RadioIcon, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          _onSelect = _props._onSelect,
          value = _props.value,
          style = _props.style,
          isSelected = _props.isSelected,
          selectedStyle = _props.selectedStyle;

      var defaultStyle = {
        color: "#0C7C00"
      };
      var appliedStyle = style && style.icon ? _extends({}, defaultStyle, style.icon) : _extends({}, defaultStyle);
      return _react2.default.createElement(_Radio2.default, {
        type: "radio",
        value: value,
        style: appliedStyle,
        checked: isSelected,
        onChange: function onChange() {
          return _onSelect(value);
        }
      });
    }
  }]);

  return RadioIcon;
}(_react2.default.Component);

RadioIcon.propTypes = {
  isSelected: _propTypes2.default.bool
};

var Option = function (_React$Component2) {
  _inherits(Option, _React$Component2);

  function Option() {
    _classCallCheck(this, Option);

    return _possibleConstructorReturn(this, (Option.__proto__ || Object.getPrototypeOf(Option)).apply(this, arguments));
  }

  _createClass(Option, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _onSelect = this.props._onSelect;

      if (!_onSelect) {
        console.error("<Option /> must be wrapped in a <QuestionGroup /> ");
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _props2 = this.props,
          value = _props2.value,
          _isSelected = _props2._isSelected,
          _onSelect = _props2._onSelect,
          style = _props2.style,
          selectedStyle = _props2.selectedStyle;


      var defaultStyle = {
        boxShadow: "0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)",
        margin: "5px 0",
        padding: "5px",
        display: "flex",
        alignItems: "center",
        backgroundColor: _isSelected ? "rgba(76,175,80,0.33)" : ""
      };
      var appliedStyle = style && style.option ? _extends({}, defaultStyle, style.option) : _extends({}, defaultStyle);

      return _react2.default.createElement(
        "div",
        {
          style: _isSelected && selectedStyle && selectedStyle.option ? _extends({}, appliedStyle, selectedStyle.option) : appliedStyle
        },
        _react2.default.createElement(RadioIcon, {
          _onSelect: _onSelect,
          value: value,
          isSelected: _isSelected,
          selectedStyle: selectedStyle,
          style: style
        }),
        _react2.default.createElement(
          "label",
          { htmlFor: value, style: { margin: "auto" } },
          this.props.children
        )
      );
    }
  }]);

  return Option;
}(_react2.default.Component);

Option.propTypes = {
  value: _propTypes2.default.string,
  _onSelect: _propTypes2.default.func
};
exports.default = Option;